name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}  # Permite ejecuci√≥n manual

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout del repositorio
        uses: actions/checkout@v4

      - name: üèóÔ∏è Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üîß Instalar dependencias (jq + browsers)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npx playwright install --with-deps

      - name: üì¶ Instalar dependencias del proyecto
        run: npm install

      - name: üöÄ Ejecutar pruebas de Playwright
        id: test
        run: |
          # Crear directorios para reportes
          mkdir -p playwright-json-report
          mkdir -p playwright-html-report
          
          # Opci√≥n 1: Forma recomendada (Playwright 1.25+)
          npx playwright test \
            --reporter=json,html \
            --output=playwright-json-report/json-results.json \
            --reporter-html-output=playwright-html-report || true
          
          # Opci√≥n 2: Fallback si falla la opci√≥n anterior
          if [ ! -f "playwright-json-report/json-results.json" ]; then
            echo "Usando m√©todo alternativo..."
            npx playwright test --reporter=json,html --output=playwright-json-report/
            mv playwright-report/* playwright-html-report/ || true
            rmdir playwright-report || true
          fi

          # Procesar resultados
          PASSED=$(jq -r '.stats.expected' playwright-json-report/json-results.json || echo 0)
          FAILED=$(jq -r '.stats.unexpected' playwright-json-report/json-results.json || echo 0)
          SKIPPED=$(jq -r '.stats.skipped' playwright-json-report/json-results.json || echo 0)
          FLAKY=$(jq -r '.stats.flaky' playwright-json-report/json-results.json || echo 0)
          TOTAL=$((PASSED + FAILED + SKIPPED + FLAKY))
          
          echo "PASSED_COUNT=$PASSED" >> $GITHUB_ENV
          echo "FAILED_COUNT=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED_COUNT=$SKIPPED" >> $GITHUB_ENV
          echo "FLAKY_COUNT=$FLAKY" >> $GITHUB_ENV
          echo "TOTAL_COUNT=$TOTAL" >> $GITHUB_ENV
          
          echo "üìä Resultados:"
          echo "‚úÖ Pasadas: $PASSED"
          echo "‚ùå Fallidas: $FAILED"
          echo "‚ö†Ô∏è Flaky: $FLAKY"
          echo "‚è≠ Omitidas: $SKIPPED"
          echo "üìã Total: $TOTAL"

      - name: üì§ Subir reportes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: playwright-reports
          path: |
            playwright-html-report/
            playwright-json-report/

      - name: üì¢ Notificar resultados en Google Chat
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          if [ "$FAILED_COUNT" -eq 0 ] && [ "$FLAKY_COUNT" -eq 0 ]; then
            STATUS_MESSAGE="‚úÖ Todas las pruebas pasaron ($PASSED_COUNT/$TOTAL_COUNT). Ver detalles: $WORKFLOW_URL"
          elif [ "$FAILED_COUNT" -gt 0 ]; then
            STATUS_MESSAGE="‚ùå Fallaron $FAILED_COUNT/$TOTAL_COUNT pruebas (‚ö†Ô∏è $FLAKY_COUNT flaky). Ver errores: $WORKFLOW_URL"
          else
            STATUS_MESSAGE="‚ö†Ô∏è Resultados mixtos: ‚úÖ$PASSED_COUNT ‚ùå$FAILED_COUNT ‚ö†Ô∏è$FLAKY_COUNT. Ver detalles: $WORKFLOW_URL"
          fi
          
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"text\": \"$STATUS_MESSAGE\"}" \
            "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}"
