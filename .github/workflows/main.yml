name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: {}  # Permite ejecuci√≥n manual

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout del repositorio
        uses: actions/checkout@v4

      - name: üèóÔ∏è Instalar Node.js y jq
        uses: actions/setup-node@v4
        with:
          node-version: 18
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: üì¶ Instalar dependencias
        run: npm install

      - name: üîΩ Instalar Playwright Browsers
        run: npx playwright install --with-deps

      - name: üöÄ Ejecutar pruebas de Playwright
        id: test
        run: |
          # Crear directorios separados para los reportes
          mkdir -p playwright-json-report
          mkdir -p playwright-html-report
          
          # Ejecutar pruebas con reporteros en directorios distintos
          npx playwright test \
            --reporter=json,html \
            --output=playwright-json-report/json-results.json \
            --reporter-html=playwright-html-report
          
          # Procesar el reporte JSON para obtener estad√≠sticas
          PASSED=$(jq -r '.stats.expected' playwright-json-report/json-results.json || echo 0)
          FAILED=$(jq -r '.stats.unexpected' playwright-json-report/json-results.json || echo 0)
          SKIPPED=$(jq -r '.stats.skipped' playwright-json-report/json-results.json || echo 0)
          FLAKY=$(jq -r '.stats.flaky' playwright-json-report/json-results.json || echo 0)
          TOTAL=$((PASSED + FAILED + SKIPPED + FLAKY))
          
          echo "PASSED_COUNT=$PASSED" >> $GITHUB_ENV
          echo "FAILED_COUNT=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED_COUNT=$SKIPPED" >> $GITHUB_ENV
          echo "FLAKY_COUNT=$FLAKY" >> $GITHUB_ENV
          echo "TOTAL_COUNT=$TOTAL" >> $GITHUB_ENV
          
          # Mostrar resultados en consola
          echo "üìä Resultados de las pruebas:"
          echo "‚úÖ Pasadas: $PASSED"
          echo "‚ùå Fallidas: $FAILED"
          echo "‚ö†Ô∏è Flaky: $FLAKY"
          echo "‚è≠ Omitidas: $SKIPPED"
          echo "üìã Total: $TOTAL"

      - name: üì§ Subir reportes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: playwright-reports
          path: |
            playwright-html-report/
            playwright-json-report/

      - name: üì¢ Notificar resultados en Google Chat
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          ARTIFACT_URL="$WORKFLOW_URL"
          
          if [ "$FAILED_COUNT" -eq 0 ] && [ "$FLAKY_COUNT" -eq 0 ]; then
            STATUS_MESSAGE="‚úÖ Todas las pruebas pasaron exitosamente ($PASSED_COUNT/$TOTAL_COUNT). [üìä Ver detalles]($WORKFLOW_URL)"
          elif [ "$FAILED_COUNT" -gt 0 ]; then
            STATUS_MESSAGE="‚ùå Pruebas fallidas: $FAILED_COUNT/$TOTAL_COUNT (‚ö†Ô∏è Flaky: $FLAKY_COUNT). [üîç Ver errores]($WORKFLOW_URL)"
          else
            STATUS_MESSAGE="‚ö†Ô∏è Pruebas con resultados mixtos: ‚úÖ $PASSED_COUNT | ‚ùå $FAILED_COUNT | ‚ö†Ô∏è $FLAKY_COUNT [üìä Ver detalles]($WORKFLOW_URL)"
          fi
          
          curl -X POST -H 'Content-Type: application/json' \
            -d "{\"text\": \"$STATUS_MESSAGE\"}" \
            "https://chat.googleapis.com/v1/spaces/AAAAOzKWJJQ/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=YFmBV6rljIYSHXdLP2ozpebmaaYRbJFCA-8HezJrGPs"
